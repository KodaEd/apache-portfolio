This file is a merged representation of the entire codebase, combined into a single document by Repomix.

================================================================
File Summary
================================================================

Purpose:
--------
This file contains a packed representation of the entire repository's contents.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.

File Format:
------------
The content is organized as follows:
1. This summary section
2. Repository information
3. Directory structure
4. Multiple file entries, each consisting of:
  a. A separator line (================)
  b. The file path (File: path/to/file)
  c. Another separator line
  d. The full contents of the file
  e. A blank line

Usage Guidelines:
-----------------
- This file should be treated as read-only. Any changes should be made to the
  original repository files, not this packed version.
- When processing this file, use the file path to distinguish
  between different files in the repository.
- Be aware that this file may contain sensitive information. Handle it with
  the same level of security as you would the original repository.

Notes:
------
- Some files may have been excluded based on .gitignore rules and Repomix's configuration
- Binary files are not included in this packed representation. Please refer to the Repository Structure section for a complete list of file paths, including binary files
- Files matching patterns in .gitignore are excluded
- Files matching default ignore patterns are excluded

Additional Info:
----------------

================================================================
Directory Structure
================================================================
content/
  about/
    education.md
    skills.json
  projects/
    project_notes.md
public/
  file.svg
  globe.svg
  next.svg
  vercel.svg
  window.svg
src/
  app/
    globals.css
    layout.tsx
    page.tsx
  components/
    explorer/
      FileExplorer.tsx
      FileRow.tsx
      types.ts
    AsciiArt.tsx
  data/
    about.tsx
    contact.tsx
    index.tsx
    projects.tsx
    types.ts
    work.tsx
.gitignore
eslint.config.mjs
next.config.ts
package.json
postcss.config.mjs
README.md
tailwind.config.ts
tsconfig.json

================================================================
Files
================================================================

================
File: content/about/education.md
================
# Education

## University of Technology
*Bachelor of Science in Computer Science*  
2020 - 2024

- Major in Software Engineering
- Minor in Data Science
- GPA: 3.8/4.0

### Notable Coursework
- Advanced Algorithms
- Machine Learning
- Database Systems
- Software Architecture
- Web Development

### Awards & Achievements
- Dean's List (All Semesters)
- First Place, University Hackathon 2023
- Computer Science Merit Scholarship

================
File: content/about/skills.json
================
{
    "programming_languages": [
      "JavaScript/TypeScript",
      "Python",
      "C++",
      "Java"
    ],
    "frameworks": [
      "React",
      "Next.js",
      "Node.js",
      "Express"
    ],
    "databases": [
      "PostgreSQL",
      "MongoDB",
      "Redis"
    ],
    "tools": [
      "Git",
      "Docker",
      "AWS",
      "Linux"
    ]
  }

================
File: content/projects/project_notes.md
================
# Project Development Notes

## Architecture Overview
The application follows a modern microservices architecture with the following components:

### Frontend
- React.js with Next.js for server-side rendering
- TailwindCSS for styling
- Redux Toolkit for state management

### Backend
- Node.js microservices
- GraphQL API gateway
- PostgreSQL database
- Redis for caching

## Deployment
- Containerized with Docker
- Hosted on AWS ECS
- CI/CD pipeline using GitHub Actions

## Performance Metrics
- 98/100 Lighthouse score
- <100ms server response time
- 99.9% uptime

## Future Improvements
1. Implement WebSocket connections
2. Add real-time analytics
3. Enhance mobile responsiveness

================
File: public/file.svg
================
<svg fill="none" viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg"><path d="M14.5 13.5V5.41a1 1 0 0 0-.3-.7L9.8.29A1 1 0 0 0 9.08 0H1.5v13.5A2.5 2.5 0 0 0 4 16h8a2.5 2.5 0 0 0 2.5-2.5m-1.5 0v-7H8v-5H3v12a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1M9.5 5V2.12L12.38 5zM5.13 5h-.62v1.25h2.12V5zm-.62 3h7.12v1.25H4.5zm.62 3h-.62v1.25h7.12V11z" clip-rule="evenodd" fill="#666" fill-rule="evenodd"/></svg>

================
File: public/globe.svg
================
<svg fill="none" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16"><g clip-path="url(#a)"><path fill-rule="evenodd" clip-rule="evenodd" d="M10.27 14.1a6.5 6.5 0 0 0 3.67-3.45q-1.24.21-2.7.34-.31 1.83-.97 3.1M8 16A8 8 0 1 0 8 0a8 8 0 0 0 0 16m.48-1.52a7 7 0 0 1-.96 0H7.5a4 4 0 0 1-.84-1.32q-.38-.89-.63-2.08a40 40 0 0 0 3.92 0q-.25 1.2-.63 2.08a4 4 0 0 1-.84 1.31zm2.94-4.76q1.66-.15 2.95-.43a7 7 0 0 0 0-2.58q-1.3-.27-2.95-.43a18 18 0 0 1 0 3.44m-1.27-3.54a17 17 0 0 1 0 3.64 39 39 0 0 1-4.3 0 17 17 0 0 1 0-3.64 39 39 0 0 1 4.3 0m1.1-1.17q1.45.13 2.69.34a6.5 6.5 0 0 0-3.67-3.44q.65 1.26.98 3.1M8.48 1.5l.01.02q.41.37.84 1.31.38.89.63 2.08a40 40 0 0 0-3.92 0q.25-1.2.63-2.08a4 4 0 0 1 .85-1.32 7 7 0 0 1 .96 0m-2.75.4a6.5 6.5 0 0 0-3.67 3.44 29 29 0 0 1 2.7-.34q.31-1.83.97-3.1M4.58 6.28q-1.66.16-2.95.43a7 7 0 0 0 0 2.58q1.3.27 2.95.43a18 18 0 0 1 0-3.44m.17 4.71q-1.45-.12-2.69-.34a6.5 6.5 0 0 0 3.67 3.44q-.65-1.27-.98-3.1" fill="#666"/></g><defs><clipPath id="a"><path fill="#fff" d="M0 0h16v16H0z"/></clipPath></defs></svg>

================
File: public/next.svg
================
<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 394 80"><path fill="#000" d="M262 0h68.5v12.7h-27.2v66.6h-13.6V12.7H262V0ZM149 0v12.7H94v20.4h44.3v12.6H94v21h55v12.6H80.5V0h68.7zm34.3 0h-17.8l63.8 79.4h17.9l-32-39.7 32-39.6h-17.9l-23 28.6-23-28.6zm18.3 56.7-9-11-27.1 33.7h17.8l18.3-22.7z"/><path fill="#000" d="M81 79.3 17 0H0v79.3h13.6V17l50.2 62.3H81Zm252.6-.4c-1 0-1.8-.4-2.5-1s-1.1-1.6-1.1-2.6.3-1.8 1-2.5 1.6-1 2.6-1 1.8.3 2.5 1a3.4 3.4 0 0 1 .6 4.3 3.7 3.7 0 0 1-3 1.8zm23.2-33.5h6v23.3c0 2.1-.4 4-1.3 5.5a9.1 9.1 0 0 1-3.8 3.5c-1.6.8-3.5 1.3-5.7 1.3-2 0-3.7-.4-5.3-1s-2.8-1.8-3.7-3.2c-.9-1.3-1.4-3-1.4-5h6c.1.8.3 1.6.7 2.2s1 1.2 1.6 1.5c.7.4 1.5.5 2.4.5 1 0 1.8-.2 2.4-.6a4 4 0 0 0 1.6-1.8c.3-.8.5-1.8.5-3V45.5zm30.9 9.1a4.4 4.4 0 0 0-2-3.3 7.5 7.5 0 0 0-4.3-1.1c-1.3 0-2.4.2-3.3.5-.9.4-1.6 1-2 1.6a3.5 3.5 0 0 0-.3 4c.3.5.7.9 1.3 1.2l1.8 1 2 .5 3.2.8c1.3.3 2.5.7 3.7 1.2a13 13 0 0 1 3.2 1.8 8.1 8.1 0 0 1 3 6.5c0 2-.5 3.7-1.5 5.1a10 10 0 0 1-4.4 3.5c-1.8.8-4.1 1.2-6.8 1.2-2.6 0-4.9-.4-6.8-1.2-2-.8-3.4-2-4.5-3.5a10 10 0 0 1-1.7-5.6h6a5 5 0 0 0 3.5 4.6c1 .4 2.2.6 3.4.6 1.3 0 2.5-.2 3.5-.6 1-.4 1.8-1 2.4-1.7a4 4 0 0 0 .8-2.4c0-.9-.2-1.6-.7-2.2a11 11 0 0 0-2.1-1.4l-3.2-1-3.8-1c-2.8-.7-5-1.7-6.6-3.2a7.2 7.2 0 0 1-2.4-5.7 8 8 0 0 1 1.7-5 10 10 0 0 1 4.3-3.5c2-.8 4-1.2 6.4-1.2 2.3 0 4.4.4 6.2 1.2 1.8.8 3.2 2 4.3 3.4 1 1.4 1.5 3 1.5 5h-5.8z"/></svg>

================
File: public/vercel.svg
================
<svg fill="none" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1155 1000"><path d="m577.3 0 577.4 1000H0z" fill="#fff"/></svg>

================
File: public/window.svg
================
<svg fill="none" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16"><path fill-rule="evenodd" clip-rule="evenodd" d="M1.5 2.5h13v10a1 1 0 0 1-1 1h-11a1 1 0 0 1-1-1zM0 1h16v11.5a2.5 2.5 0 0 1-2.5 2.5h-11A2.5 2.5 0 0 1 0 12.5zm3.75 4.5a.75.75 0 1 0 0-1.5.75.75 0 0 0 0 1.5M7 4.75a.75.75 0 1 1-1.5 0 .75.75 0 0 1 1.5 0m1.75.75a.75.75 0 1 0 0-1.5.75.75 0 0 0 0 1.5" fill="#666"/></svg>

================
File: src/app/globals.css
================
@tailwind base;
@tailwind components;
@tailwind utilities;

================
File: src/app/layout.tsx
================
import type { Metadata } from "next";
import "./globals.css";

export const metadata: Metadata = {
  title: "~/Edrick-Koda/Portfolio",
  description: "KodaSystems/7.7 Server at www.edrickkoda.com Port 80",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body className="font-['Courier_New'] antialiased bg-white text-black">
        {children}
      </body>
    </html>
  );
}

================
File: src/app/page.tsx
================
import Art from "@/components/AsciiArt";
import FileExplorer from "@/components/explorer/FileExplorer";

export default function Home() {
  return (
    <div className="p-4 md:p-8 max-w-7xl mx-auto">
      {/* ASCII Art Header */}
      <div className="overflow-x-auto">
        <Art />
      </div>

      <h1 className="mt-4 text-2xl md:text-3xl font-bold">
        ~/Edrick-Koda/Portfolio
      </h1>

      {/* File Explorer */}
      <div className="mt-4 overflow-x-auto">
        <FileExplorer />
      </div>

      {/* Footer */}
      <div className="mt-6 pt-5 border-t text-sm md:text-base">
        KodaSystems/7.7 Server at www.edrickkoda.com Port 80
      </div>
    </div>
  );
}

================
File: src/components/explorer/FileExplorer.tsx
================
"use client";
import React from "react";
import FileRow from "./FileRow";
import { fileItems } from "@/data";

const FileExplorer: React.FC = () => {
  return (
    <div className="w-full">
      {/* Table Header - Made responsive */}
      <div className="flex items-center gap-2 p-2 text-slate-600 border-b mb-2">
        <span className="flex-1 min-w-0 truncate ml-10">Name</span>
        <div className="hidden sm:flex gap-4 md:gap-8">
          <span className="w-16 md:w-24">Type</span>
          <span className="w-16 md:w-24 text-right">Size</span>
          <span className="w-20 md:w-32">Last Modified</span>
        </div>
      </div>

      {/* Table Rows */}
      <div>
        {fileItems.map((item) => (
          <FileRow key={item.id} item={item} />
        ))}
      </div>
    </div>
  );
};

export default FileExplorer;

================
File: src/components/explorer/FileRow.tsx
================
"use client";
import React, { useState } from "react";
import { ChevronDown, ChevronRight } from "lucide-react";
import { FileItem } from "./types";

interface FileRowProps {
  item: FileItem;
  level?: number;
}

const FileRow: React.FC<FileRowProps> = ({ item, level = 0 }) => {
  const {
    label,
    icon: Icon,
    type,
    size,
    lastModified,
    content,
    link,
    defaultOpen = false,
    children,
  } = item;

  const [isOpen, setIsOpen] = useState(defaultOpen);
  const [showContent, setShowContent] = useState(false);

  const hasChildren = children && children.length > 0;
  const hasContent = !!content;

  const handleClick = () => {
    if (hasChildren) {
      setIsOpen(!isOpen);
    } else if (link) {
      window.open(link, "_blank");
    } else if (hasContent) {
      setShowContent(!showContent);
    }
  };

  return (
    <div className="ml-2">
      <div
        className="flex items-center gap-2 p-2 hover:bg-slate-100 rounded cursor-pointer group transition-colors"
        onClick={handleClick}
      >
        <div className="flex items-center gap-2 flex-1 min-w-0">
          {/* Arrow indicator for expandable items */}
          {hasChildren || hasContent ? (
            isOpen || showContent ? (
              <ChevronDown className="w-4 h-4 flex-shrink-0" />
            ) : (
              <ChevronRight className="w-4 h-4 flex-shrink-0" />
            )
          ) : (
            <div className="w-4 flex-shrink-0" />
          )}

          {/* Icon */}
          <Icon className="w-4 h-4 text-black-600 flex-shrink-0" />

          {/* Label */}
          <span className="group-hover:text-blue-600 min-w-0 truncate">
            {label}
          </span>
        </div>

        {/* File information - made responsive */}
        <div className="hidden sm:flex gap-4 md:gap-8 text-sm text-slate-500">
          <span className="w-16 md:w-24 truncate">{type}</span>
          <span className="w-16 md:w-24 text-right truncate">
            {size || "--"}
          </span>
          <span className="w-20 md:w-32 truncate">{lastModified || "--"}</span>
        </div>
      </div>

      {/* Directory children */}
      {isOpen && hasChildren && (
        <div className="ml-4 border-l border-slate-200">
          {children.map((child) => (
            <FileRow key={child.id} item={child} level={level + 1} />
          ))}
        </div>
      )}

      {/* File content - expanded in place instead of modal */}
      {showContent && content && (
        <div className="ml-8 my-2 p-4 border-l border-slate-200 bg-gray-50 rounded-r">
          {/* The content is now directly rendered as React.ReactNode */}
          {content}
        </div>
      )}
    </div>
  );
};

export default FileRow;

================
File: src/components/explorer/types.ts
================
// Type definitions for the File Explorer components

import { LucideIcon } from "lucide-react";

export type FileType =
  | "Directory"
  | "Markdown"
  | "HTML"
  | "JSON"
  | "Python"
  | "C++"
  | "Link"
  | "Text";

export interface FileItem {
  id: string;
  label: string;
  icon: LucideIcon;
  type: FileType;
  size?: string;
  lastModified?: string;
  link?: string;
  defaultOpen?: boolean;
  content?: React.ReactNode;
  children?: FileItem[];
}

================
File: src/components/AsciiArt.tsx
================
export default function Art() {
  return (
    <pre
      className="font-mono text-xs md:text-sm whitespace-pre"
      style={{ lineHeight: "1", overflowX: "auto" }}
    >
      {`░░░░░░░░░░░░░░░░░░░░░░░░░░░▒▒▒▒░░░░░░░░░░░░░░░░░░░
░░░░░░░░░░░░░░░░░░░░░░░▒▓█▓█▓█▓▓▓▓▒░░░░░░░░░░░░░░░
░░░░░░░░░░░░░░░░▒▓▓▓▓▓███████████▓█▓▒░░░░░░░░░░░░░
░░░░░░░░░░░░░░▒▒▓███████████████████▓▒░░░░░░░░░░░░
▒▒▒▒▒▒▒▒░░░░░▒▒▓█████████████████████▓▓▒░░░░░░░░░░
▒▒▒▒▒▒▒▒▒▒░░▒▓▓██████████████████████▓█▓▒░░░░░░░░░
░░░░░░░░░░░░▒███████████▓▓▓█████████████▓░░░░░░░▒▒
░░░░░░░░░░░░▓██████████▓▒▒▒█▓████████████▒░░░░░░░░
░░░░░░░░░░░▒█████████▓▒▒▒▒▓▓█████▓███████▒░░░░░░░░
░░░░░░░░░░░▒██████▓▓▓▓▓▓▓▓▓▓▓▓▓▒▓▓▓▓█████▓░░░░░░░░
▒▒▒░░▒░░░░░▒█████▓▓▓▓█▓▓▒▒▒▓▓▓▓▓▓▓▓▒▓████▓▒▒▒▒▒▒▒▒
▒▒▒▒▒▒▒▒▒▒░▒███▓▒▒▒▒▓▓▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓███▓░▒▒▒▒░▒▒
░░░░░░░░░░░▒███▓▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒███▓▒▒▒▒▒▒▒▒
▒▒▒▒▒▒▒▒▒▒▒▒█▓▓▓▒▒▒▒▒▓▒▓▓▓▓██▓▒▓▓▒▒▒▒▒▓▓█▓▒▒▒▒▒▒▒▒
▒▒▒▒▒▒░░░░░░▓█▓▓▒▒▒▓▓▒▒▒▒▒▒▒▒▒▒▓▓▓▓▓▒▒▒▓█▒▒▒▒▒▒▒▒▒
░░░░░░░░░░░░░█▒▒▒▒▓▓▓▓▓▓▓▓▓▓▓▓█▓▓▒▒▓▒▓██▒░░░░░░░░░
░░░░░░░░░░░░░▒█▓▓▒▒▒▒▒▓▓▒▒▒▒▒▒▒▒▒▒▒▓▓██▓░░░░░░░░░░
░░░░░░░░░░░░░░░██▓▓▒▒▒▒▒▓▓▓▓▓▒▒▒▒▓▓▓██▒░░░░░░░░░░░
░░░░░░░░░░░░░░░▓██▓▓▓▒▒▒▒▒▒▒▒▒▒▒▓▓▓▓███▒░░▒▓██▓░░░
░░░░░░░░░░░░░░░▓███▓▓▓▓▒▒▒▒▒▓▓▓▓▓▓▓▓████████████░░
░░░░░░░░░░░▒▒▒▓▓███▓▓▓▓▓██████▓▓▓▓▓▓█████████████▓
▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓███▓▓▓▓▓▓▓███▓▓▓▓▓▓▓█████▓▓▓██████
▒▒▒▒▒▒▒▒▒▓▓▓▒▒▓████▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓█████▓▓▓▓▓███
▒▒▒▒▒▒▒▓▒▓▓▒▓▓█████▓▒▒▓▓▓▓▒▒▓▓▓▓▓▓▒▒▒▓████▓▓▓▓▓▓▓█
▒▒▒▒▒▒▒▒▒▒▒▓▓▓█████▓▒▒▒▓▓▓▓▓▓▓▓▓▒▒▒▒▒▓████▓▓▓▓▓▓▓▓
▒▒▒▒▒▒▒▒▒▓▓▓▓█▓████▓▒▒▒▒▒▓▓▓▓▓▓▒▒▒▒▒▒▓██▓██▓▓▓▓▓██
▒▒▒▒▒▒▒▒▓▓▓▓▓██████▓▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓███▓▓▓▓▓████
`}
    </pre>
  );
}

================
File: src/data/about.tsx
================
import { User, GraduationCap, FileText } from "lucide-react";
import { FileItem } from "@/components/explorer/types";

const Background = () => (
  <div className="space-y-4">
    <section>
      <h2 className="text-xl font-bold mb-2">Professional Background</h2>
      <p className="mb-2">
        I am a software developer with a deep appreciation for the logical and
        deterministic nature of programming. My journey in technology has been
        driven by a fascination with how code can transform complex problems
        into structured solutions.
      </p>
      <p>
        Currently working at 38 Social, I specialize in developing tailored
        technological solutions for clients while focusing on backend
        development and system architecture.
      </p>
    </section>

    <section>
      <h3 className="text-lg font-bold mb-2">Professional Philosophy</h3>
      <p className="mb-2">
        My approach to software development is grounded in the belief that the
        best technical solutions come from a thorough understanding of
        non-technical problems. I excel at:
      </p>
      <ul className="list-disc pl-5 space-y-1">
        <li>
          Breaking down complex business requirements into actionable technical
          specifications
        </li>
        <li>
          Bridging the gap between client needs and technical implementation
        </li>
        <li>Creating scalable, maintainable backend solutions</li>
        <li>
          Facilitating clear communication between technical and non-technical
          stakeholders
        </li>
      </ul>
    </section>

    <section>
      <h3 className="text-lg font-bold mb-2">Technical Focus</h3>
      <p className="mb-2">
        My primary focus lies in backend web development, where I enjoy:
      </p>
      <ul className="list-disc pl-5 space-y-1">
        <li>Designing and implementing robust API architectures</li>
        <li>Creating efficient database schemas and queries</li>
        <li>Developing scalable server-side solutions</li>
        <li>Implementing secure and performant backend systems</li>
      </ul>
    </section>
  </div>
);

const Education = () => (
  <div className="space-y-4">
    <section>
      <h2 className="text-xl font-bold mb-2">
        University of New South Wales (UNSW)
      </h2>
      <p className="italic">Bachelor of Science in Computer Science</p>
      <p className="italic mb-3">2022 - 2024</p>
    </section>

    <section>
      <h3 className="text-lg font-bold mb-2">Academic Performance</h3>
      <ul className="list-disc pl-5 space-y-1">
        <li>Overall WAM (Weighted Average Mark): 74.48</li>
        <li>Program: Computer Science (3778)</li>
        <li>Status: Completed December 2024</li>
      </ul>
    </section>

    <section>
      <h3 className="text-lg font-bold mb-2">Technical Strengths</h3>
      <ul className="list-disc pl-5 space-y-1">
        <li>
          Strong performance in programming courses, particularly in advanced
          languages (C++, Rust)
        </li>
        <li>Excellence in software testing and quality assurance</li>
        <li>Solid foundation in database systems and web development</li>
        <li>
          Proficiency in user interface design and human-computer interaction
        </li>
      </ul>
    </section>

    <section>
      <h3 className="text-lg font-bold mb-2">Key Coursework</h3>

      <h4 className="font-bold mt-3 mb-1">
        Programming & Software Development
      </h4>
      <ul className="list-disc pl-5 space-y-1">
        <li>Programming Fundamentals (HD - 87%)</li>
        <li>Software Engineering Fundamentals (DN - 83%)</li>
        <li>Object-Oriented Design & Programming (CR - 71%)</li>
        <li>Web Front-End Programming (DN - 81%)</li>
        <li>Advanced C++ Programming (HD - 88%)</li>
        <li>Modern Programming with Rust (HD - 89%)</li>
        <li>Software Testing and QA (HD - 86%)</li>
      </ul>

      <h4 className="font-bold mt-3 mb-1">Computer Science Core</h4>
      <ul className="list-disc pl-5 space-y-1">
        <li>Data Structures and Algorithms (CR - 71%)</li>
        <li>Algorithm Design and Analysis (DN - 79%)</li>
        <li>Operating Systems (DN - 77%)</li>
        <li>Computer Networks & Applications (DN - 82%)</li>
        <li>Database Systems (HD - 85%)</li>
      </ul>
    </section>
  </div>
);

export const aboutItems: Record<string, FileItem> = {
  about_me: {
    id: "about_me",
    label: "about_me",
    icon: User,
    type: "Directory",
    size: "2.4 KB",
    lastModified: "Dec 10, 2024",
    defaultOpen: true,
    children: {
      "background.md": {
        id: "about_me/background.md",
        label: "background.md",
        icon: FileText,
        type: "Text",
        size: "1.2 KB",
        lastModified: "Dec 09, 2024",
        content: <Background />,
      },
      "education.md": {
        id: "about_me/education.md",
        label: "education.md",
        icon: GraduationCap,
        type: "Text",
        size: "1.2 KB",
        lastModified: "Dec 09, 2024",
        content: <Education />,
      },
    },
  },
};

================
File: src/data/contact.tsx
================
import { Phone, Linkedin, Github, Mail } from "lucide-react";
import { FileItem } from "@/components/explorer/types";

export const contactItems: Record<string, FileItem> = {
  contact: {
    id: "contact",
    label: "contact",
    icon: Phone,
    type: "Directory",
    size: "--",
    lastModified: "Dec 11, 2024",
    children: {
      linkedin: {
        id: "contact/linkedin",
        label: "linkedin",
        icon: Linkedin,
        type: "Link",
        size: "--",
        lastModified: "Dec 11, 2024",
        link: "https://linkedin.com/in/koda-edrick-aa52a0237",
      },
      github: {
        id: "contact/github",
        label: "github",
        icon: Github,
        type: "Link",
        size: "--",
        lastModified: "Dec 11, 2024",
        link: "https://github.com/KodaEd",
      },
      email: {
        id: "contact/email",
        label: "email",
        icon: Mail,
        type: "Link",
        size: "--",
        lastModified: "Dec 11, 2024",
        link: "mailto:contact@edrickkoda.com",
      },
    },
  },
};

================
File: src/data/index.tsx
================
import { FileItem } from "@/components/explorer/types";
import { aboutItems } from "./about";
import { projectItems } from "./projects";
import { workItems } from "./work";
import { contactItems } from "./contact";
import { createFileItems } from "./types";

// Combine all items in the appropriate order
const combinedItems: Record<string, FileItem> = {
  ...aboutItems,
  ...workItems,
  ...projectItems,
  ...contactItems,
};

// Transform into array format for the FileExplorer component
export const fileItems: FileItem[] = createFileItems(combinedItems);

// Export individual sections for more granular use if needed
export { aboutItems, projectItems, workItems, contactItems };

================
File: src/data/projects.tsx
================
import { Folder, Code, FileText } from "lucide-react";
import { FileItem } from "@/components/explorer/types";

const WeatherDashboard = () => (
  <div className="space-y-6">
    <div className="bg-gray-100 p-4 rounded-lg">
      <h2 className="text-xl font-bold mb-2">React Weather Dashboard</h2>
      <div className="space-y-2">
        <p>A modern weather application built with React and Next.js</p>
        <div className="flex flex-wrap gap-2">
          <span className="px-2 py-1 bg-blue-100 text-blue-800 rounded text-sm">
            React
          </span>
          <span className="px-2 py-1 bg-black text-white rounded text-sm">
            Next.js
          </span>
          <span className="px-2 py-1 bg-green-100 text-green-800 rounded text-sm">
            TailwindCSS
          </span>
        </div>
      </div>
    </div>

    <div className="space-y-2">
      <h3 className="font-bold">Key Features:</h3>
      <ul className="list-disc pl-5 space-y-1">
        <li>Real-time weather data integration</li>
        <li>Interactive radar maps</li>
        <li>7-day forecast with detailed metrics</li>
        <li>Location-based automatic updates</li>
      </ul>
    </div>

    <div className="border-t pt-4">
      <p className="text-sm text-gray-600">
        View the live demo at:{" "}
        <a href="#" className="text-blue-600 hover:underline">
          demo.weather-app.com
        </a>
      </p>
    </div>
  </div>
);

const ProjectNotes = () => (
  <div className="space-y-4">
    <section>
      <h2 className="text-xl font-bold mb-2">Architecture Overview</h2>
      <p className="mb-2">
        The application follows a modern microservices architecture with the
        following components:
      </p>
    </section>

    <section>
      <h3 className="text-lg font-bold mb-2">Frontend</h3>
      <ul className="list-disc pl-5 space-y-1">
        <li>React.js with Next.js for server-side rendering</li>
        <li>TailwindCSS for styling</li>
        <li>Redux Toolkit for state management</li>
      </ul>
    </section>

    <section>
      <h3 className="text-lg font-bold mb-2">Backend</h3>
      <ul className="list-disc pl-5 space-y-1">
        <li>Node.js microservices</li>
        <li>GraphQL API gateway</li>
        <li>PostgreSQL database</li>
        <li>Redis for caching</li>
      </ul>
    </section>

    <section>
      <h3 className="text-lg font-bold mb-2">Deployment</h3>
      <ul className="list-disc pl-5 space-y-1">
        <li>Containerized with Docker</li>
        <li>Hosted on AWS ECS</li>
        <li>CI/CD pipeline using GitHub Actions</li>
      </ul>
    </section>

    <section>
      <h3 className="text-lg font-bold mb-2">Performance Metrics</h3>
      <ul className="list-disc pl-5 space-y-1">
        <li>98/100 Lighthouse score</li>
        <li>&lt;100ms server response time</li>
        <li>99.9% uptime</li>
      </ul>
    </section>

    <section>
      <h3 className="text-lg font-bold mb-2">Future Improvements</h3>
      <ol className="list-decimal pl-5 space-y-1">
        <li>Implement WebSocket connections</li>
        <li>Add real-time analytics</li>
        <li>Enhance mobile responsiveness</li>
      </ol>
    </section>
  </div>
);

export const projectItems: Record<string, FileItem> = {
  projects: {
    id: "projects",
    label: "projects",
    icon: Folder,
    type: "Directory",
    size: "--",
    lastModified: "Dec 11, 2024",
    children: {
      web_development: {
        id: "projects/web_development",
        label: "web_development",
        icon: Folder,
        type: "Directory",
        size: "--",
        lastModified: "Dec 11, 2024",
        children: {
          "weather_dashboard.html": {
            id: "projects/web_development/weather_dashboard.html",
            label: "weather_dashboard.html",
            icon: Code,
            type: "HTML",
            size: "4.5 KB",
            lastModified: "Dec 11, 2024",
            content: <WeatherDashboard />,
          },
          "project_notes.md": {
            id: "projects/web_development/project_notes.md",
            label: "project_notes.md",
            icon: FileText,
            type: "Text",
            size: "2.1 KB",
            lastModified: "Dec 10, 2024",
            content: <ProjectNotes />,
          },
        },
      },
    },
  },
};

================
File: src/data/types.ts
================
// Shared type definitions for data
import { FileItem } from "@/components/explorer/types";

export interface AboutData {
  background: React.ReactNode;
  education: React.ReactNode;
}

export interface WorkExperience {
  title: string;
  company: string;
  period: string;
  description: React.ReactNode;
}

export interface Project {
  title: string;
  tags: string[];
  description: React.ReactNode;
  features: string[];
  demoLink?: string;
  repoLink?: string;
}

export interface ContactInfo {
  linkedin: string;
  github: string;
  email: string;
}

// Function to convert section data to FileItem structure
export function createFileItems(
  items: Record<string, any>,
  basePath: string = ""
): FileItem[] {
  return Object.entries(items).map(([key, value]) => {
    const item = value as FileItem;
    return {
      ...item,
      id: `${basePath}/${key}`,
      children: item.children
        ? createFileItems(item.children, `${basePath}/${key}`)
        : undefined,
    };
  });
}

================
File: src/data/work.tsx
================
import { Folder, FileText } from "lucide-react";
import { FileItem } from "@/components/explorer/types";

const PlaceholderContent = () => (
  <div className="p-4 bg-gray-50 border border-dashed border-gray-300 rounded">
    <h2 className="text-xl font-bold mb-3">Coming Soon</h2>
    <p className="text-gray-600">
      Work experience details will be added here. This section is currently
      under construction.
    </p>
    <div className="mt-4 p-3 bg-blue-50 text-blue-700 rounded">
      <p>
        <strong>Note:</strong> Check back soon for updated information about
        previous work experience and accomplishments.
      </p>
    </div>
  </div>
);

export const workItems: Record<string, FileItem> = {
  work_experience: {
    id: "work_experience",
    label: "work_experience",
    icon: Folder,
    type: "Directory",
    size: "--",
    lastModified: "Dec 11, 2024",
    defaultOpen: true,
    children: {
      todo: {
        id: "work_experience/todo",
        label: "Things to do",
        icon: Folder,
        type: "Directory",
        size: "--",
        lastModified: "Dec 11, 2024",
        defaultOpen: true,
        content: <PlaceholderContent />,
      },
    },
  },
};

================
File: .gitignore
================
# See https://help.github.com/articles/ignoring-files/ for more about ignoring files.

# dependencies
/node_modules
/.pnp
.pnp.*
.yarn/*
!.yarn/patches
!.yarn/plugins
!.yarn/releases
!.yarn/versions

# testing
/coverage

# next.js
/.next/
/out/

# production
/build

# misc
.DS_Store
*.pem

# debug
npm-debug.log*
yarn-debug.log*
yarn-error.log*
.pnpm-debug.log*

# env files (can opt-in for committing if needed)
.env*

# vercel
.vercel

# typescript
*.tsbuildinfo
next-env.d.ts
repomix-output.txt

================
File: eslint.config.mjs
================
import { dirname } from "path";
import { fileURLToPath } from "url";
import { FlatCompat } from "@eslint/eslintrc";

const __filename = fileURLToPath(import.meta.url);
const __dirname = dirname(__filename);

const compat = new FlatCompat({
  baseDirectory: __dirname,
});

const eslintConfig = [
  ...compat.extends("next/core-web-vitals", "next/typescript"),
];

export default eslintConfig;

================
File: next.config.ts
================
import type { NextConfig } from "next";

const nextConfig: NextConfig = {
  /* config options here */
};

export default nextConfig;

================
File: package.json
================
{
  "name": "frontend",
  "version": "0.1.0",
  "private": true,
  "scripts": {
    "dev": "next dev --turbopack",
    "inspect": "NODE_OPTIONS='--inspect' next dev",
    "build": "next build",
    "start": "next start",
    "lint": "next lint"
  },
  "dependencies": {
    "lucide-react": "^0.468.0",
    "next": "^15.3.1-canary.7",
    "react": "^19.0.0",
    "react-dom": "^19.0.0",
    "react-markdown": "^9.0.1",
    "rehype-raw": "^7.0.0",
    "remark-gfm": "^4.0.0"
  },
  "devDependencies": {
    "@eslint/eslintrc": "^3",
    "@types/node": "^20",
    "@types/react": "^19",
    "@types/react-dom": "^19",
    "eslint": "^9",
    "eslint-config-next": "15.1.0",
    "postcss": "^8",
    "tailwindcss": "^3.4.1",
    "typescript": "^5"
  }
}

================
File: postcss.config.mjs
================
/** @type {import('postcss-load-config').Config} */
const config = {
  plugins: {
    tailwindcss: {},
  },
};

export default config;

================
File: README.md
================
This is a [Next.js](https://nextjs.org) project bootstrapped with [`create-next-app`](https://nextjs.org/docs/app/api-reference/cli/create-next-app).

## Getting Started

First, run the development server:

```bash
npm run dev
# or
yarn dev
# or
pnpm dev
# or
bun dev
```

Open [http://localhost:3000](http://localhost:3000) with your browser to see the result.

You can start editing the page by modifying `app/page.tsx`. The page auto-updates as you edit the file.

This project uses [`next/font`](https://nextjs.org/docs/app/building-your-application/optimizing/fonts) to automatically optimize and load [Geist](https://vercel.com/font), a new font family for Vercel.

## Learn More

To learn more about Next.js, take a look at the following resources:

- [Next.js Documentation](https://nextjs.org/docs) - learn about Next.js features and API.
- [Learn Next.js](https://nextjs.org/learn) - an interactive Next.js tutorial.

You can check out [the Next.js GitHub repository](https://github.com/vercel/next.js) - your feedback and contributions are welcome!

## Deploy on Vercel

The easiest way to deploy your Next.js app is to use the [Vercel Platform](https://vercel.com/new?utm_medium=default-template&filter=next.js&utm_source=create-next-app&utm_campaign=create-next-app-readme) from the creators of Next.js.

Check out our [Next.js deployment documentation](https://nextjs.org/docs/app/building-your-application/deploying) for more details.

================
File: tailwind.config.ts
================
import type { Config } from "tailwindcss";

export default {
  content: [
    "./src/pages/**/*.{js,ts,jsx,tsx,mdx}",
    "./src/components/**/*.{js,ts,jsx,tsx,mdx}",
    "./src/app/**/*.{js,ts,jsx,tsx,mdx}",
  ],
  theme: {
    extend: {
      fontFamily: {
        serif: ['"Times New Roman"', 'serif'],
        mono: ['"Courier New"', 'monospace'],
      },
      colors: {
        background: "var(--background)",
        foreground: "var(--foreground)",
      },
    },
  },
  plugins: [],
} satisfies Config;

================
File: tsconfig.json
================
{
  "compilerOptions": {
    "target": "ES2017",
    "lib": ["dom", "dom.iterable", "esnext"],
    "allowJs": true,
    "skipLibCheck": true,
    "strict": true,
    "noEmit": true,
    "esModuleInterop": true,
    "module": "esnext",
    "moduleResolution": "bundler",
    "resolveJsonModule": true,
    "isolatedModules": true,
    "jsx": "preserve",
    "incremental": true,
    "plugins": [
      {
        "name": "next"
      }
    ],
    "paths": {
      "@/*": ["./src/*"]
    }
  },
  "include": ["next-env.d.ts", "**/*.ts", "**/*.tsx", ".next/types/**/*.ts"],
  "exclude": ["node_modules"]
}



================================================================
End of Codebase
================================================================
